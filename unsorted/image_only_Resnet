{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2899,"status":"ok","timestamp":1639964385772,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"OP90pNTZXHlt","outputId":"eda4b06b-2c0c-4c74-dac1-b772ab877c8e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: image_tabular in /usr/local/lib/python3.7/dist-packages (0.0.6)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from image_tabular) (1.0.1)\n","Requirement already satisfied: torch in /usr/local/lib/python3.7/dist-packages (from image_tabular) (1.10.0+cu111)\n","Requirement already satisfied: torchvision in /usr/local/lib/python3.7/dist-packages (from image_tabular) (0.11.1+cu111)\n","Requirement already satisfied: fastai in /usr/local/lib/python3.7/dist-packages (from image_tabular) (1.0.61)\n","Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (1.19.5)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (7.1.2)\n","Requirement already satisfied: bottleneck in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (1.3.2)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (1.1.5)\n","Requirement already satisfied: spacy>=2.0.18 in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (2.2.4)\n","Requirement already satisfied: nvidia-ml-py3 in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (7.352.0)\n","Requirement already satisfied: numexpr in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (2.7.3)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (2.23.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (1.4.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (21.3)\n","Requirement already satisfied: fastprogress>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (1.0.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (3.2.2)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (3.13)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.7/dist-packages (from fastai->image_tabular) (4.6.3)\n","Requirement already satisfied: wasabi<1.1.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (0.8.2)\n","Requirement already satisfied: tqdm<5.0.0,>=4.38.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (4.62.3)\n","Requirement already satisfied: srsly<1.1.0,>=1.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (1.0.5)\n","Requirement already satisfied: blis<0.5.0,>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (0.4.1)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (3.0.6)\n","Requirement already satisfied: catalogue<1.1.0,>=0.0.7 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (1.0.0)\n","Requirement already satisfied: thinc==7.4.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (7.4.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (57.4.0)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (2.0.6)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (1.0.6)\n","Requirement already satisfied: plac<1.2.0,>=0.9.6 in /usr/local/lib/python3.7/dist-packages (from spacy>=2.0.18->fastai->image_tabular) (1.1.3)\n","Requirement already satisfied: importlib-metadata>=0.20 in /usr/local/lib/python3.7/dist-packages (from catalogue<1.1.0,>=0.0.7->spacy>=2.0.18->fastai->image_tabular) (4.8.2)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20->catalogue<1.1.0,>=0.0.7->spacy>=2.0.18->fastai->image_tabular) (3.6.0)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=0.20->catalogue<1.1.0,>=0.0.7->spacy>=2.0.18->fastai->image_tabular) (3.10.0.2)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->fastai->image_tabular) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->fastai->image_tabular) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->fastai->image_tabular) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->fastai->image_tabular) (2021.10.8)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->fastai->image_tabular) (0.11.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->fastai->image_tabular) (1.3.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->fastai->image_tabular) (3.0.6)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->fastai->image_tabular) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib->fastai->image_tabular) (1.15.0)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->fastai->image_tabular) (2018.9)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->image_tabular) (3.0.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->image_tabular) (1.1.0)\n"]}],"source":["pip install image_tabular"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23,"status":"ok","timestamp":1639964385773,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"5KkOTv9M2hB1","outputId":"75e342b4-28ee-4f2f-add4-1ce2a0ac921d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mon Dec 20 01:39:43 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 495.44       Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla P100-PCIE...  Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   37C    P0    29W / 250W |      0MiB / 16280MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"]}],"source":["gpu_info = !nvidia-smi\n","gpu_info = '\\n'.join(gpu_info)\n","if gpu_info.find('failed') >= 0:\n","  print('Select the Runtime > \"Change runtime type\" menu to enable a GPU accelerator, ')\n","  print('and then re-execute this cell.')\n","else:\n","  print(gpu_info)"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2492,"status":"ok","timestamp":1639964388257,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"wMFGhdin2ojs","outputId":"bfacc55f-677c-48e5-c379-2eb6e2a17e71"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["#Mount google drive\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":16,"status":"ok","timestamp":1639964388257,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"brkO3Gvp23-D"},"outputs":[],"source":["import os\n","#set working directory\n","root_dir = \"/content/drive/My Drive/\""]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":14,"status":"ok","timestamp":1639964388258,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"l43jisVq24BB"},"outputs":[],"source":["#choose the project folder\n","project_folder = \"Colab Notebooks/chest/\""]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12,"status":"ok","timestamp":1639964388258,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"g3Ok5Aae24D0","outputId":"dfcf0d97-26d2-4323-9295-7aad3d78e402"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/My Drive/Colab Notebooks/chest/did not exist and was created.\n"]}],"source":["#define a function to create and set the working directory\n","def create_and_set_working_directory(project_folder):\n","  #check if the project folder exists. if not, make one.\n","  if os.path.isdir(root_dir + project_folder) == False:\n","    os.mkdir(root_dir + project_folder)\n","\n","print(root_dir + project_folder + 'did not exist and was created.')"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":8,"status":"ok","timestamp":1639964388259,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"fIybFgq-24Gq"},"outputs":[],"source":["#change the OS path to project folder as working directory\n","os.chdir(root_dir + project_folder)"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":689,"status":"ok","timestamp":1639964388940,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"WpY4pE6k24Jd","outputId":"6b1b6bb6-a407-4f73-9a0e-adf24b9cda54"},"outputs":[{"output_type":"stream","name":"stdout","text":["working directory/content/drive/My Drive/Colab Notebooks/chest/empty text file created. You can also run !pwd command to confirm working directory.\n"]}],"source":["#create a test file in the working directory and see if it shows up at the right place\n","!touch 'new_file_test.txt'\n","print('working directory' + root_dir + project_folder + \\\n","      \"empty text file created. You can also run !pwd command to confirm working directory.\")"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1639964388941,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"KuDHi2mT3PJd","outputId":"e74f9e67-cf41-48b6-eba0-2098e27f4140"},"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'/content/drive/My Drive/Colab Notebooks/chest'"]},"metadata":{},"execution_count":9}],"source":["pwd"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1639964388942,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"3zX7QPd9XAvj"},"outputs":[],"source":["%reload_ext autoreload\n","%autoreload 2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":1434,"status":"ok","timestamp":1639964390364,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"j2aE5NvOXAyT"},"outputs":[],"source":["from fastai.vision import *\n","from image_tabular.core import *\n","from image_tabular.metric import *\n","\n","# use gpu by default if available\n","device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":36,"status":"ok","timestamp":1639964390365,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"Qu6iq4-LXA1C"},"outputs":[],"source":["import warnings\n","warnings.filterwarnings(\"ignore\", category=UserWarning, module=\"torch.nn.functional\")"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1639964390365,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"TbX3fgjmXA33"},"outputs":[],"source":["#Set the path of the data\n","data_path = ('data/real_image/')"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":35,"status":"ok","timestamp":1639964390366,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"DGhu8ESeXA6u","outputId":"00e575d4-1dc2-407a-b242-a6b18b43ebc2"},"outputs":[{"output_type":"stream","name":"stdout","text":["729 183\n"]}],"source":["#Import Metadata\n","train_df = pd.read_csv(f\"{data_path}real_meta_train.csv\")\n","test_df = pd.read_csv(f\"{data_path}real_meta_test.csv\")\n","\n","print(len(train_df), len(test_df))"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1639964390367,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"o94pjcRaXA96","outputId":"71467643-90b8-48ef-8ea9-39c55018e0c6"},"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-d93eb315-f2f8-43cb-963f-04f25b81c5f1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Image Index</th>\n","      <th>Patient Age</th>\n","      <th>Patient Gender</th>\n","      <th>View Position</th>\n","      <th>OriginalImagePixelSpacing[x</th>\n","      <th>y]</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>00000199_000.png</td>\n","      <td>55</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.143</td>\n","      <td>0.143</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>00000952_000.png</td>\n","      <td>50</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.171</td>\n","      <td>0.171</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>00025551_000.png</td>\n","      <td>59</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.143</td>\n","      <td>0.143</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>00000900_000.png</td>\n","      <td>59</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.171</td>\n","      <td>0.171</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>00000755_000.png</td>\n","      <td>52</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.168</td>\n","      <td>0.168</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d93eb315-f2f8-43cb-963f-04f25b81c5f1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d93eb315-f2f8-43cb-963f-04f25b81c5f1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d93eb315-f2f8-43cb-963f-04f25b81c5f1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        Image Index  Patient Age  ...     y]  label\n","0  00000199_000.png           55  ...  0.143      0\n","1  00000952_000.png           50  ...  0.171      0\n","2  00025551_000.png           59  ...  0.143      1\n","3  00000900_000.png           59  ...  0.171      0\n","4  00000755_000.png           52  ...  0.168      0\n","\n","[5 rows x 7 columns]"]},"metadata":{},"execution_count":15}],"source":["train_df.head()"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1639964390367,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"22PzlGtGXBAy","outputId":"900ac140-1702-4d10-845b-27540825a24d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    0.77915\n","1    0.22085\n","Name: label, dtype: float64"]},"metadata":{},"execution_count":16}],"source":["# extremely unbalanced dataset, most of the images are benign\n","train_df[\"label\"].value_counts(normalize=True)"]},{"cell_type":"markdown","metadata":{"id":"jsoF5n48Xoe6"},"source":["### Image data\n"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":23,"status":"ok","timestamp":1639964390368,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"jFMKkAooXBD3"},"outputs":[],"source":["tfms = get_transforms(flip_vert=True)\n","size = 128\n","bs = 64"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22,"status":"ok","timestamp":1639964390368,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"86sHoh4zXnqD","outputId":"b28068a4-ac3b-4d52-8754-ba4ed2bcea7a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["145"]},"metadata":{},"execution_count":18}],"source":["# idx for validation\n","val_idx = get_valid_index(train_df)\n","len(val_idx)"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1639964390369,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"-Kad8KlLXns3","outputId":"79ec34a3-53f8-4449-c107-f62457c84a45"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/fastai/vision/transform.py:247: UserWarning: torch.solve is deprecated in favor of torch.linalg.solveand will be removed in a future PyTorch release.\n","torch.linalg.solve has its arguments reversed and does not return the LU factorization.\n","To get the LU factorization see torch.lu, which can be used with torch.lu_solve or torch.lu_unpack.\n","X = torch.solve(B, A).solution\n","should be replaced with\n","X = torch.linalg.solve(A, B) (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:766.)\n","  return _solve_func(B,A)[0][:,0]\n"]}],"source":["# load image data using train_df and prepare fastai LabelLists\n","image_data = (ImageList.from_df(train_df, path=data_path, cols=\"Image Index\",\n","                               folder=\"real_image_train\")\n","              .split_by_idx(val_idx)\n","              .label_from_df(cols=\"label\")\n","              .transform(tfms, size=size))\n","# , suffix=\".jpg\""]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1116,"status":"ok","timestamp":1639964391471,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"BLg6UAhlXnvk","outputId":"2eb60868-2cc7-4c97-d8f8-978027e12fb8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["LabelLists;\n","\n","Train: LabelList (584 items)\n","x: ImageList\n","Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128)\n","y: CategoryList\n","0,1,0,0,0\n","Path: data/real_image;\n","\n","Valid: LabelList (145 items)\n","x: ImageList\n","Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128)\n","y: CategoryList\n","0,0,0,0,0\n","Path: data/real_image;\n","\n","Test: LabelList (183 items)\n","x: ImageList\n","Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128),Image (3, 128, 128)\n","y: EmptyLabelList\n",",,,,\n","Path: data/real_image"]},"metadata":{},"execution_count":20}],"source":["# add test data so that we can make predictions\n","test_image_data = ImageList.from_df(test_df, path=data_path, cols=\"Image Index\",\n","                                    folder=\"real_image_test\")\n","image_data.add_test(test_image_data)"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1639964391473,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"aTAepP0GXBGj"},"outputs":[],"source":["# # adjust loss function weight because the dataset is extremely unbalanced\n","# weights = [1/(1-train_df[\"target\"].mean()), 1/train_df[\"target\"].mean()]\n","# loss_func = CrossEntropyFlat(weight=torch.FloatTensor(weights).to(device))\n","loss_func = CrossEntropyFlat()"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":2382,"status":"ok","timestamp":1639964393847,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"I7zy3er9ZS9L"},"outputs":[],"source":["image_data_db = image_data.databunch()"]},{"cell_type":"code","execution_count":23,"metadata":{"executionInfo":{"elapsed":9,"status":"ok","timestamp":1639964393848,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"sLjwCo4waFit"},"outputs":[],"source":["# tst = create_cnn_model(models.vgg16_bn, 1,pretrained=True)"]},{"cell_type":"code","execution_count":24,"metadata":{"executionInfo":{"elapsed":4573,"status":"ok","timestamp":1639964398414,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"XrIvFVooYsJK","colab":{"base_uri":"https://localhost:8080/","height":67,"referenced_widgets":["4ac6d02ac8f84fc9b7c78bae3c0c5ebd","ecbdb4f44ed14c4fb5a018b3a1ff4bf2","ec14b8d64b544aff8e5c1dda3d6c6f3f","c354dfd210e04b018c48d1a064db5a59","4f082bc1b227442882e913300da37c6d","c037f86c4fd1421ba6011c0e7a6a5cf4","adc35e24d2d042f181af5dd7ace29989","320e159e4b954d18b92fe1a2507abf04","8ca613570b434d93a0415d27e4ae92b8","5391fda490be42c7bc9ab7678858bec9","d33ce101151a4714a08be21b315f927a"]},"outputId":"04dd8cde-a9b4-4804-920c-555e591692a2"},"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading: \"https://download.pytorch.org/models/resnet50-0676ba61.pth\" to /root/.cache/torch/hub/checkpoints/resnet50-0676ba61.pth\n"]},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"4ac6d02ac8f84fc9b7c78bae3c0c5ebd","version_minor":0,"version_major":2},"text/plain":["  0%|          | 0.00/97.8M [00:00<?, ?B/s]"]},"metadata":{}}],"source":["# package everything in a fastai learner, add auc roc score as a metric\n","learn = cnn_learner(image_data_db, models.resnet50, ps=0.2,metrics=[accuracy, Precision(),Recall(),ROCAUC()], loss_func=loss_func)"]},{"cell_type":"code","execution_count":25,"metadata":{"executionInfo":{"elapsed":35,"status":"ok","timestamp":1639964398417,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"},"user_tz":-540},"id":"OVPdrUHeZk-D"},"outputs":[],"source":["# learn.lr_find()\n","# learn.recorder.plot(suggestion = True)"]},{"cell_type":"code","execution_count":26,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"TnyPP4XyZlC6","outputId":"51dbbad2-e3ad-4958-ad30-f29883bf0fba","executionInfo":{"status":"ok","timestamp":1639964619211,"user_tz":-540,"elapsed":220827,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}}},"outputs":[{"output_type":"display_data","data":{"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>accuracy</th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>rocauc</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>1.047864</td>\n","      <td>0.994567</td>\n","      <td>0.434483</td>\n","      <td>0.234694</td>\n","      <td>0.766667</td>\n","      <td>0.625507</td>\n","      <td>00:21</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>1.103830</td>\n","      <td>2.666966</td>\n","      <td>0.262069</td>\n","      <td>0.210526</td>\n","      <td>0.933333</td>\n","      <td>0.508986</td>\n","      <td>00:20</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>1.091456</td>\n","      <td>1.179761</td>\n","      <td>0.537931</td>\n","      <td>0.253333</td>\n","      <td>0.633333</td>\n","      <td>0.622899</td>\n","      <td>00:21</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.139303</td>\n","      <td>0.855871</td>\n","      <td>0.765517</td>\n","      <td>0.423077</td>\n","      <td>0.366667</td>\n","      <td>0.619710</td>\n","      <td>00:21</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.107859</td>\n","      <td>0.997640</td>\n","      <td>0.634483</td>\n","      <td>0.265306</td>\n","      <td>0.433333</td>\n","      <td>0.564638</td>\n","      <td>00:21</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.052287</td>\n","      <td>0.972309</td>\n","      <td>0.772414</td>\n","      <td>0.333333</td>\n","      <td>0.100000</td>\n","      <td>0.542029</td>\n","      <td>00:21</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>1.002501</td>\n","      <td>0.584281</td>\n","      <td>0.751724</td>\n","      <td>0.392857</td>\n","      <td>0.366667</td>\n","      <td>0.670435</td>\n","      <td>00:22</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>0.933930</td>\n","      <td>0.751821</td>\n","      <td>0.648276</td>\n","      <td>0.309091</td>\n","      <td>0.566667</td>\n","      <td>0.651594</td>\n","      <td>00:22</td>\n","    </tr>\n","    <tr>\n","      <td>8</td>\n","      <td>0.879012</td>\n","      <td>0.927149</td>\n","      <td>0.544828</td>\n","      <td>0.250000</td>\n","      <td>0.600000</td>\n","      <td>0.590725</td>\n","      <td>00:22</td>\n","    </tr>\n","    <tr>\n","      <td>9</td>\n","      <td>0.823850</td>\n","      <td>0.873008</td>\n","      <td>0.593103</td>\n","      <td>0.269841</td>\n","      <td>0.566667</td>\n","      <td>0.613043</td>\n","      <td>00:23</td>\n","    </tr>\n","  </tbody>\n","</table>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x1152 with 4 Axes>"]},"metadata":{"needs_background":"light"}}],"source":["# train\n","learn.fit_one_cycle(10, 1e-3)\n","learn.recorder.plot_metrics()"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"rrtT6WTtZlGc","executionInfo":{"status":"ok","timestamp":1639964619212,"user_tz":-540,"elapsed":17,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}}},"outputs":[],"source":["# unfreeze all layer groups to train the entire model using differential learning rates\n","# learn.unfreeze()\n","# learn.fit_one_cycle(10, slice(1e-6, 1e-3))"]},{"cell_type":"code","source":["#Confusion Matrix\n","from fastai.train import ClassificationInterpretation\n","interp = ClassificationInterpretation.from_learner(learn)\n","losses, idxs = interp.top_losses()\n","len(image_data_db.valid_ds)==len(losses)==len(idxs)\n","interp.plot_confusion_matrix(figsize=(7,7))"],"metadata":{"id":"IRNf_VYkPAs2","colab":{"base_uri":"https://localhost:8080/","height":526},"executionInfo":{"status":"ok","timestamp":1639964624427,"user_tz":-540,"elapsed":5230,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}},"outputId":"a00588dd-0b87-4df5-91e7-246f865c4245"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/html":[""],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 504x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Confusion Matrix\n","upp, low = interp.confusion_matrix()\n","tn, fp = upp[0], upp[1]\n","fn, tp = low[0], low[1]\n","print(tn, fp, fn, tp)"],"metadata":{"id":"JdV5oh05Q4Bk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639964624428,"user_tz":-540,"elapsed":31,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}},"outputId":"9c6659f1-2e14-4b82-ace3-bbc5366080c3"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["69 46 13 17\n"]}]},{"cell_type":"code","source":["#Sensitivity\n","sensitivity = tp/(tp + fn)\n","sensitivity"],"metadata":{"id":"uysWl3teRCmz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639964624428,"user_tz":-540,"elapsed":28,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}},"outputId":"0773d978-4835-4555-9b5c-59f8d61baa38"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.5666666666666667"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["specificity = tn/(fp + tn)\n","specificity"],"metadata":{"id":"OCJ3C9jiShJF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639964624429,"user_tz":-540,"elapsed":25,"user":{"displayName":"demore demore","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16558528897465647936"}},"outputId":"e923513e-2cd8-45aa-b21d-022f4e90e2e0"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6"]},"metadata":{},"execution_count":31}]}],"metadata":{"colab":{"collapsed_sections":[],"name":"image_only_Resnet","provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyOCtvWzPYHXERvH3TrnH8mo"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"4ac6d02ac8f84fc9b7c78bae3c0c5ebd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_ecbdb4f44ed14c4fb5a018b3a1ff4bf2","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_ec14b8d64b544aff8e5c1dda3d6c6f3f","IPY_MODEL_c354dfd210e04b018c48d1a064db5a59","IPY_MODEL_4f082bc1b227442882e913300da37c6d"]}},"ecbdb4f44ed14c4fb5a018b3a1ff4bf2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ec14b8d64b544aff8e5c1dda3d6c6f3f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_c037f86c4fd1421ba6011c0e7a6a5cf4","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":"100%","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_adc35e24d2d042f181af5dd7ace29989"}},"c354dfd210e04b018c48d1a064db5a59":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_view_name":"ProgressView","style":"IPY_MODEL_320e159e4b954d18b92fe1a2507abf04","_dom_classes":[],"description":"","_model_name":"FloatProgressModel","bar_style":"success","max":102530333,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":102530333,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_8ca613570b434d93a0415d27e4ae92b8"}},"4f082bc1b227442882e913300da37c6d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_view_name":"HTMLView","style":"IPY_MODEL_5391fda490be42c7bc9ab7678858bec9","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 97.8M/97.8M [00:01&lt;00:00, 84.6MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d33ce101151a4714a08be21b315f927a"}},"c037f86c4fd1421ba6011c0e7a6a5cf4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"adc35e24d2d042f181af5dd7ace29989":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"320e159e4b954d18b92fe1a2507abf04":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"8ca613570b434d93a0415d27e4ae92b8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"5391fda490be42c7bc9ab7678858bec9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d33ce101151a4714a08be21b315f927a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"nbformat":4,"nbformat_minor":0}